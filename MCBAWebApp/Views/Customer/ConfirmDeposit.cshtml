@model DepositViewModel;
@{
    ViewData["Title"] = "Confirm Deposit";
}

<h1 class="display-6">Deposit Confirmation</h1>
<h1 class="display-6">Account Number: @Model.Account!.AccountNumber (@Model.Account.AccountType)</h1>
<h1 class="display-6">New Balance: @((Model.Account.Balance - Model.Amount).ToString("C2"))</h1>
<h1 class="display-6">
    New Available Balance:
    @((Model.Account.Balance - Model.Account.MinimumBalance - Model.Amount).ToString("C2"))
</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="ConfirmDeposit">
            <input type="hidden" asp-for="AccountNumber" />
            <div class="form-group my-2">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" readonly />
            </div>
            <div class="form-group my-2">
                <label asp-for="Comment" class="control-label"></label>
                <input asp-for="Comment" class="form-control" readonly/>
            </div>
            <div class="form-group my-2">
                <input type="submit" value="Confirm" class="btn btn-primary" />
            </div>
        </form>
        <a asp-action="Index" class="btn btn-danger">Cancel</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
