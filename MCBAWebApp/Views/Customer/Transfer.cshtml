@model TransferViewModel
@{
    ViewData["Title"] = "Transfer";
}

<h6 class="display-6">Account Number: @Model.Account!.AccountNumber (@Model.Account.AccountType)</h6>
<h1 class="display-6">Balance: @Model.Account.Balance.ToString("C2")</h1>
<h1 class="display-6">
    Available Balance:
    @((Model.Account.Balance - Model.Account.MinimumBalance).ToString("C2"))
</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Transfer">
            <input type="hidden" asp-for="AccountNumber" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group my-2">
                <label asp-for="Amount" class="control-label"></label>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">$</span>
                    </div>
                    <input asp-for="Amount" class="form-control" />
                </div>
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group my-2">
                <label asp-for="DestinationAccount" class="control-label"></label>
                <input asp-for="DestinationAccount" class="form-control" />
                <span asp-validation-for="DestinationAccount" class="text-danger"></span>
            </div>
            <div class="form-group my-2">
                <label asp-for="Comment" class="control-label"></label>
                <input asp-for="Comment" class="form-control" />
            </div>
            <div class="form-group my-2">
                <input type="submit" value="Transfer" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to Accounts</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
